openapi: 3.1.0
info:
  title: Edge API
  version: '1'
servers:
  - url: https://edge.api.flagsmith.com/api/v1
    description: Edge API
security:
  - EnvironmentKey: []
tags: []
paths:
  /flags:
    get:
      tags: ['Edge API']
      summary: Get flags
      description: Retrieve the flags for an environment.
      parameters:
        - in: query
          name: feature
          schema:
            type: integer
          required: false
          description:
            'ID of the feature to filter for. Note that, if provided, response is a single object, not an array.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/FeatureState'
                  - type: object
                    $ref: '#/components/schemas/FeatureState'
  /identities:
    get:
      tags: ['Edge API']
      summary: Get identity flags and traits
      description:
        'Retrieve the flags and traits for an identity. Note: identity will be lazily created if it does not already
        exist.'
      parameters:
        - name: identifier
          in: query
          description: Identity Key
          required: true
          schema:
            type: string
            description: The string referencing the Identity
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentitiesResponse'
    post:
      tags: ['Edge API']
      summary: Identify user
      description: Identify a user and retrieve their flags and traits in response.
      requestBody:
        content:
          application/json:
            schema:
              example: {}
              $ref: '#/components/schemas/IdentitiesRequestData'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentitiesResponsePost'
  /bulk-identities:
    post:
      tags: ['Edge API']
      summary: Bulk insert identities (overwrite)
      description: |+
        Bulk uploading identities and traits. If there is an existing identity, using POST will overwrite the existing identity with the data from the request.

        It has a limit of 100 identities per request.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
              $ref: '#/components/schemas/BulkIdentitiesData'
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                description: Number of identities must not be more than 100
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
                description: Organisation is disabled from serving flags.
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
                description: Environment not found
    put:
      tags: ['Edge API']
      summary: Bulk insert identities (update)
      description: |+
        Bulk uploading identities and traits. If there is an existing identity, using PUT will update the existing identity with the data from the request.

        It has a limit of 100 identities per request.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
              $ref: '#/components/schemas/BulkIdentitiesData'
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                description: Number of identities must not be more than 100
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
                description: Organisation is disabled from serving flags.
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
                description: Environment not found
components:
  securitySchemes:
    EnvironmentKey:
      type: apiKey
      in: header
      name: X-Environment-Key
  schemas:
    FeatureState:
      type: object
      properties:
        enabled:
          type: boolean
        feature_state_value:
          oneOf:
            - type: string
              example: 'a-remote-config-value'
            - type: number
              example: 42
            - type: boolean
              example: true
          nullable: true
        feature:
          $ref: '#/components/schemas/Feature'
    Feature:
      title: feature
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 42
        name:
          type: string
          example: 'show_hero_banner'
        type:
          type: string
          example: 'STANDARD'
    Trait:
      type: object
      properties:
        trait_key:
          type: string
          example: Name
        trait_value:
          oneOf:
            - type: string
              example: B.A. Baracus
            - type: number
              example: 42
            - type: boolean
              example: true
          nullable: true
    IdentitiesResponse:
      type: object
      properties:
        flags:
          type: array
          items:
            $ref: '#/components/schemas/FeatureState'
        traits:
          type: array
          items:
            $ref: '#/components/schemas/Trait'
    IdentitiesResponsePost:
      type: object
      properties:
        identifier:
          type: string
          example: '27a483b1-ab92-4c26-9800-d5fad201ca6a'
        flags:
          type: array
          items:
            $ref: '#/components/schemas/FeatureState'
        traits:
          type: array
          items:
            $ref: '#/components/schemas/Trait'
    IdentitiesRequestData:
      type: object
      properties:
        traits:
          type: array
          items:
            $ref: '#/components/schemas/Trait'
        identifier:
          type: string
    BulkIdentitiesData:
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/IdentitiesRequestData'
