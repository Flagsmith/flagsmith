services:
  pg-0:
    extends:
      file: ./docker/common/db/.pgpool.yml
      service: pg-0
    volumes:
      - pg_0_data:/bitnami/postgresql

  pg-1:
    extends:
      file: ./docker/common/db/.pgpool.yml
      service: pg-1
    volumes:
      - pg_1_data:/bitnami/postgresql

  pgpool:
    extends:
      file: ./docker/common/db/.pgpool.yml
      service: pgpool

  flagsmith:
    image: flagsmith/flagsmith:latest
    platform: linux/arm64
    environment:
      DATABASE_URL: postgresql://flagsmith:password@pgpool:5432/flagsmith
      USE_POSTGRES_FOR_ANALYTICS: 'true' # Store API and Flag Analytics data in Postgres

      ENVIRONMENT: production # set to 'production' in production.
      DJANGO_ALLOWED_HOSTS: '*' # Change this in production
      ALLOW_ADMIN_INITIATION_VIA_CLI: 'true' # Change this in production
      FLAGSMITH_DOMAIN: localhost:8000 # Change this in production
      DJANGO_SECRET_KEY: secret # Change this in production
      ENABLE_ADMIN_ACCESS_USER_PASS: 'true'
      TASK_RUN_METHOD: TASK_PROCESSOR # other options are: SYNCHRONOUSLY, SEPARATE_THREAD (default)
    ports:
      - 8000:8000
    healthcheck:
      test: ['CMD-SHELL', 'python /app/scripts/healthcheck.py']
      interval: 2s
      timeout: 2s
      retries: 20
      start_period: 20s
    depends_on:
      pgpool:
        condition: service_healthy

  flagsmith_processor:
    image: flagsmith/flagsmith:latest
    platform: linux/arm64
    environment:
      DATABASE_URL: postgresql://flagsmith:password@pgpool:5432/flagsmith
      USE_POSTGRES_FOR_ANALYTICS: 'true'
    depends_on:
      flagsmith:
        condition: service_healthy
    command: run-task-processor

volumes:
  pg_0_data:
    driver: local
  pg_1_data:
    driver: local
