# Generated by Django 4.2.22 on 2025-07-01 04:34

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models  # type: ignore[import-untyped]
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("api_keys", "0003_masterapikey_is_admin"),
        ("projects", "0027_add_create_project_level_change_requests_permission"),
        ("environments", "0037_add_uuid_field"),
    ]

    operations = [
        migrations.CreateModel(
            name="PipelineStage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "order",
                    models.PositiveSmallIntegerField(
                        validators=[django.core.validators.MaxValueValidator(30)]
                    ),
                ),
                (
                    "environment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pipeline_stages",
                        to="environments.environment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReleasePipeline",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        db_index=True,
                        default=None,
                        editable=False,
                        null=True,
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="release_pipelines",
                        to="projects.project",
                    ),
                ),
                (
                    "published_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="published_release_pipelines",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PipelineStageTrigger",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "trigger_type",
                    models.CharField(
                        choices=[
                            ("ON_ENTER", "Trigger when flag enters stage"),
                            ("WAIT_FOR", "Trigger after waiting for x amount of time"),
                        ],
                        default="ON_ENTER",
                        max_length=50,
                    ),
                ),
                ("trigger_body", models.JSONField(null=True)),
                (
                    "stage",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trigger",
                        to="release_pipelines_core.pipelinestage",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PipelineStageAction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            (
                                "TOGGLE_FEATURE",
                                "Enable/Disable Feature for the environment",
                            ),
                            (
                                "UPDATE_FEATURE_VALUE",
                                "Update Feature Value for the environment",
                            ),
                            (
                                "TOGGLE_FEATURE_FOR_SEGMENT",
                                "Enable/Disable Feature for a specific segment",
                            ),
                            (
                                "UPDATE_FEATURE_VALUE_FOR_SEGMENT",
                                "Update Feature Value for a specific segment",
                            ),
                        ],
                        default="TOGGLE_FEATURE",
                        max_length=50,
                    ),
                ),
                ("action_body", models.JSONField(null=True)),
                (
                    "stage",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="actions",
                        to="release_pipelines_core.pipelinestage",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="pipelinestage",
            name="pipeline",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stages",
                to="release_pipelines_core.releasepipeline",
            ),
        ),
        migrations.CreateModel(
            name="HistoricalReleasePipeline",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        db_index=True,
                        default=None,
                        editable=False,
                        null=True,
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "master_api_key",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api_keys.masterapikey",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="projects.project",
                    ),
                ),
                (
                    "published_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical release pipeline",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddConstraint(
            model_name="pipelinestage",
            constraint=models.UniqueConstraint(
                fields=("pipeline", "order"), name="unique_pipeline_stage_order"
            ),
        ),
    ]
